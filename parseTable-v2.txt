program TK_FUNID:   program --> otherFunctions mainFunction 
program TK_MAIN:   program --> otherFunctions mainFunction 
mainFunction TK_MAIN:   mainFunction --> TK_MAIN stmts TK_END 
otherFunctions TK_FUNID:   otherFunctions --> function otherFunctions 
otherFunctions TK_MAIN:   otherFunctions --> EPSILON 
function TK_FUNID:   function --> TK_FUNID input_par output_par TK_SEM stmts TK_END 
input_par TK_INPUT:   input_par --> TK_INPUT TK_PARAMETER TK_LIST TK_SQL parameter_list TK_SQR 
output_par TK_OUTPUT:   output_par --> TK_OUTPUT TK_PARAMETER TK_LIST TK_SQL parameter_list TK_SQR 
output_par TK_SEM:   output_par --> EPSILON 
parameter_list TK_RUID:   parameter_list --> dataType TK_ID remaining_list 
parameter_list TK_UNION:   parameter_list --> dataType TK_ID remaining_list 
parameter_list TK_INT:   parameter_list --> dataType TK_ID remaining_list 
parameter_list TK_REAL:   parameter_list --> dataType TK_ID remaining_list 
parameter_list TK_RECORD:   parameter_list --> dataType TK_ID remaining_list 
dataType TK_RUID:   dataType --> constructedDatatype 
dataType TK_UNION:   dataType --> constructedDatatype 
dataType TK_INT:   dataType --> primitiveDatatype 
dataType TK_REAL:   dataType --> primitiveDatatype 
dataType TK_RECORD:   dataType --> constructedDatatype 
primitiveDatatype TK_INT:   primitiveDatatype --> TK_INT 
primitiveDatatype TK_REAL:   primitiveDatatype --> TK_REAL 
constructedDatatype TK_RUID:   constructedDatatype --> TK_RUID 
constructedDatatype TK_UNION:   constructedDatatype --> TK_UNION TK_RUID 
constructedDatatype TK_RECORD:   constructedDatatype --> TK_RECORD TK_RUID 
remaining_list TK_SQR:   remaining_list --> EPSILON 
remaining_list TK_COMMA:   remaining_list --> TK_COMMA parameter_list 
stmts TK_ID:   stmts --> typeDefinitions declarations otherStmts returnStmt 
stmts TK_WHILE:   stmts --> typeDefinitions declarations otherStmts returnStmt 
stmts TK_UNION:   stmts --> typeDefinitions declarations otherStmts returnStmt 
stmts TK_DEFINETYPE:   stmts --> typeDefinitions declarations otherStmts returnStmt 
stmts TK_TYPE:   stmts --> typeDefinitions declarations otherStmts returnStmt 
stmts TK_SQL:   stmts --> typeDefinitions declarations otherStmts returnStmt 
stmts TK_IF:   stmts --> typeDefinitions declarations otherStmts returnStmt 
stmts TK_READ:   stmts --> typeDefinitions declarations otherStmts returnStmt 
stmts TK_WRITE:   stmts --> typeDefinitions declarations otherStmts returnStmt 
stmts TK_RETURN:   stmts --> typeDefinitions declarations otherStmts returnStmt 
stmts TK_CALL:   stmts --> typeDefinitions declarations otherStmts returnStmt 
stmts TK_RECORD:   stmts --> typeDefinitions declarations otherStmts returnStmt 
typeDefinitions TK_ID:   typeDefinitions --> EPSILON 
typeDefinitions TK_WHILE:   typeDefinitions --> EPSILON 
typeDefinitions TK_UNION:   typeDefinitions --> actualOrRedefined typeDefinitions 
typeDefinitions TK_DEFINETYPE:   typeDefinitions --> actualOrRedefined typeDefinitions 
typeDefinitions TK_TYPE:   typeDefinitions --> EPSILON 
typeDefinitions TK_SQL:   typeDefinitions --> EPSILON 
typeDefinitions TK_IF:   typeDefinitions --> EPSILON 
typeDefinitions TK_READ:   typeDefinitions --> EPSILON 
typeDefinitions TK_WRITE:   typeDefinitions --> EPSILON 
typeDefinitions TK_RETURN:   typeDefinitions --> EPSILON 
typeDefinitions TK_CALL:   typeDefinitions --> EPSILON 
typeDefinitions TK_RECORD:   typeDefinitions --> actualOrRedefined typeDefinitions 
actualOrRedefined TK_UNION:   actualOrRedefined --> typeDefinition 
actualOrRedefined TK_DEFINETYPE:   actualOrRedefined --> definetypestmt 
actualOrRedefined TK_RECORD:   actualOrRedefined --> typeDefinition 
typeDefinition TK_UNION:   typeDefinition --> TK_UNION TK_RUID fieldDefinitions TK_ENDUNION 
typeDefinition TK_RECORD:   typeDefinition --> TK_RECORD TK_RUID fieldDefinitions TK_ENDRECORD 
fieldDefinitions TK_TYPE:   fieldDefinitions --> fieldDefinition fieldDefinition moreFields 
fieldDefinition TK_TYPE:   fieldDefinition --> TK_TYPE fieldType TK_COLON TK_FIELDID TK_SEM 
fieldType TK_RUID:   fieldType --> constructedDatatype 
fieldType TK_UNION:   fieldType --> constructedDatatype 
fieldType TK_INT:   fieldType --> primitiveDatatype 
fieldType TK_REAL:   fieldType --> primitiveDatatype 
fieldType TK_RECORD:   fieldType --> constructedDatatype 
moreFields TK_ENDUNION:   moreFields --> EPSILON 
moreFields TK_TYPE:   moreFields --> fieldDefinition moreFields 
moreFields TK_ENDRECORD:   moreFields --> EPSILON 
declarations TK_ID:   declarations --> EPSILON 
declarations TK_WHILE:   declarations --> EPSILON 
declarations TK_TYPE:   declarations --> declaration declarations 
declarations TK_SQL:   declarations --> EPSILON 
declarations TK_IF:   declarations --> EPSILON 
declarations TK_READ:   declarations --> EPSILON 
declarations TK_WRITE:   declarations --> EPSILON 
declarations TK_RETURN:   declarations --> EPSILON 
declarations TK_CALL:   declarations --> EPSILON 
declaration TK_TYPE:   declaration --> TK_TYPE dataType TK_COLON TK_ID global_or_not TK_SEM 
global_or_not TK_SEM:   global_or_not --> EPSILON 
global_or_not TK_COLON:   global_or_not --> TK_COLON TK_GLOBAL 
otherStmts TK_ID:   otherStmts --> stmt otherStmts 
otherStmts TK_WHILE:   otherStmts --> stmt otherStmts 
otherStmts TK_SQL:   otherStmts --> stmt otherStmts 
otherStmts TK_ENDWHILE:   otherStmts --> EPSILON 
otherStmts TK_IF:   otherStmts --> stmt otherStmts 
otherStmts TK_ENDIF:   otherStmts --> EPSILON 
otherStmts TK_READ:   otherStmts --> stmt otherStmts 
otherStmts TK_WRITE:   otherStmts --> stmt otherStmts 
otherStmts TK_RETURN:   otherStmts --> EPSILON 
otherStmts TK_CALL:   otherStmts --> stmt otherStmts 
otherStmts TK_ELSE:   otherStmts --> EPSILON 
stmt TK_ID:   stmt --> assignmentStmt 
stmt TK_WHILE:   stmt --> iterativeStmt 
stmt TK_SQL:   stmt --> funCallStmt 
stmt TK_IF:   stmt --> conditionalStmt 
stmt TK_READ:   stmt --> ioStmt 
stmt TK_WRITE:   stmt --> ioStmt 
stmt TK_CALL:   stmt --> funCallStmt 
assignmentStmt TK_ID:   assignmentStmt --> singleOrRecId TK_ASSIGNOP arithmeticExpression TK_SEM 
singleOrRecId TK_ID:   singleOrRecId --> TK_ID option_single_constructed 
option_single_constructed TK_ASSIGNOP:   option_single_constructed --> EPSILON 
option_single_constructed TK_SEM:   option_single_constructed --> EPSILON 
option_single_constructed TK_DOT:   option_single_constructed --> oneExpansion moreExpansions 
option_single_constructed TK_CL:   option_single_constructed --> EPSILON 
option_single_constructed TK_PLUS:   option_single_constructed --> EPSILON 
option_single_constructed TK_MINUS:   option_single_constructed --> EPSILON 
option_single_constructed TK_MUL:   option_single_constructed --> EPSILON 
option_single_constructed TK_DIV:   option_single_constructed --> EPSILON 
option_single_constructed TK_LT:   option_single_constructed --> EPSILON 
option_single_constructed TK_LE:   option_single_constructed --> EPSILON 
option_single_constructed TK_EQ:   option_single_constructed --> EPSILON 
option_single_constructed TK_GT:   option_single_constructed --> EPSILON 
option_single_constructed TK_GE:   option_single_constructed --> EPSILON 
option_single_constructed TK_NE:   option_single_constructed --> EPSILON 
oneExpansion TK_DOT:   oneExpansion --> TK_DOT TK_FIELDID 
moreExpansions TK_ASSIGNOP:   moreExpansions --> EPSILON 
moreExpansions TK_SEM:   moreExpansions --> EPSILON 
moreExpansions TK_DOT:   moreExpansions --> oneExpansion moreExpansions 
moreExpansions TK_CL:   moreExpansions --> EPSILON 
moreExpansions TK_PLUS:   moreExpansions --> EPSILON 
moreExpansions TK_MINUS:   moreExpansions --> EPSILON 
moreExpansions TK_MUL:   moreExpansions --> EPSILON 
moreExpansions TK_DIV:   moreExpansions --> EPSILON 
moreExpansions TK_LT:   moreExpansions --> EPSILON 
moreExpansions TK_LE:   moreExpansions --> EPSILON 
moreExpansions TK_EQ:   moreExpansions --> EPSILON 
moreExpansions TK_GT:   moreExpansions --> EPSILON 
moreExpansions TK_GE:   moreExpansions --> EPSILON 
moreExpansions TK_NE:   moreExpansions --> EPSILON 
funCallStmt TK_SQL:   funCallStmt --> outputParameters TK_CALL TK_FUNID TK_WITH TK_PARAMETERS inputParameters TK_SEM 
funCallStmt TK_CALL:   funCallStmt --> outputParameters TK_CALL TK_FUNID TK_WITH TK_PARAMETERS inputParameters TK_SEM 
outputParameters TK_SQL:   outputParameters --> TK_SQL idList TK_SQR TK_ASSIGNOP 
outputParameters TK_CALL:   outputParameters --> EPSILON 
inputParameters TK_SQL:   inputParameters --> TK_SQL idList TK_SQR 
iterativeStmt TK_WHILE:   iterativeStmt --> TK_WHILE TK_OP booleanExpression TK_CL stmt otherStmts TK_ENDWHILE 
conditionalStmt TK_IF:   conditionalStmt --> TK_IF TK_OP booleanExpression TK_CL TK_THEN stmt otherStmts elsePart 
elsePart TK_ENDIF:   elsePart --> TK_ENDIF 
elsePart TK_ELSE:   elsePart --> TK_ELSE stmt otherStmts TK_ENDIF 
ioStmt TK_READ:   ioStmt --> TK_READ TK_OP var TK_CL TK_SEM 
ioStmt TK_WRITE:   ioStmt --> TK_WRITE TK_OP var TK_CL TK_SEM 
arithmeticExpression TK_ID:   arithmeticExpression --> term expPrime 
arithmeticExpression TK_NUM:   arithmeticExpression --> term expPrime 
arithmeticExpression TK_RNUM:   arithmeticExpression --> term expPrime 
arithmeticExpression TK_OP:   arithmeticExpression --> term expPrime 
expPrime TK_SEM:   expPrime --> EPSILON 
expPrime TK_CL:   expPrime --> EPSILON 
expPrime TK_PLUS:   expPrime --> lowPrecedenceOperators term expPrime 
expPrime TK_MINUS:   expPrime --> lowPrecedenceOperators term expPrime 
term TK_ID:   term --> factor termPrime 
term TK_NUM:   term --> factor termPrime 
term TK_RNUM:   term --> factor termPrime 
term TK_OP:   term --> factor termPrime 
termPrime TK_SEM:   termPrime --> EPSILON 
termPrime TK_CL:   termPrime --> EPSILON 
termPrime TK_PLUS:   termPrime --> EPSILON 
termPrime TK_MINUS:   termPrime --> EPSILON 
termPrime TK_MUL:   termPrime --> highPrecedenceOperators factor termPrime 
termPrime TK_DIV:   termPrime --> highPrecedenceOperators factor termPrime 
factor TK_ID:   factor --> var 
factor TK_NUM:   factor --> var 
factor TK_RNUM:   factor --> var 
factor TK_OP:   factor --> TK_OP arithmeticExpression TK_CL 
highPrecedenceOperators TK_MUL:   highPrecedenceOperators --> TK_MUL 
highPrecedenceOperators TK_DIV:   highPrecedenceOperators --> TK_DIV 
lowPrecedenceOperators TK_PLUS:   lowPrecedenceOperators --> TK_PLUS 
lowPrecedenceOperators TK_MINUS:   lowPrecedenceOperators --> TK_MINUS 
booleanExpression TK_ID:   booleanExpression --> var relationalOp var 
booleanExpression TK_NUM:   booleanExpression --> var relationalOp var 
booleanExpression TK_RNUM:   booleanExpression --> var relationalOp var 
booleanExpression TK_OP:   booleanExpression --> TK_OP booleanExpression TK_CL logicalOp TK_OP booleanExpression TK_CL 
booleanExpression TK_NOT:   booleanExpression --> TK_NOT booleanExpression 
var TK_ID:   var --> singleOrRecId 
var TK_NUM:   var --> TK_NUM 
var TK_RNUM:   var --> TK_RNUM 
logicalOp TK_AND:   logicalOp --> TK_AND 
logicalOp TK_OR:   logicalOp --> TK_OR 
relationalOp TK_LT:   relationalOp --> TK_LT 
relationalOp TK_LE:   relationalOp --> TK_LE 
relationalOp TK_EQ:   relationalOp --> TK_EQ 
relationalOp TK_GT:   relationalOp --> TK_GT 
relationalOp TK_GE:   relationalOp --> TK_GE 
relationalOp TK_NE:   relationalOp --> TK_NE 
returnStmt TK_RETURN:   returnStmt --> TK_RETURN optionalReturn TK_SEM 
optionalReturn TK_SQL:   optionalReturn --> TK_SQL idList TK_SQR 
optionalReturn TK_SEM:   optionalReturn --> EPSILON 
idList TK_ID:   idList --> TK_ID more_ids 
more_ids TK_SQR:   more_ids --> EPSILON 
more_ids TK_COMMA:   more_ids --> TK_COMMA idList 
definetypestmt TK_DEFINETYPE:   definetypestmt --> TK_DEFINETYPE A TK_RUID TK_AS TK_RUID 
A TK_UNION:   A --> TK_UNION 
A TK_RECORD:   A --> TK_RECORD 